;; Set C-x C-b to open ibuffer instead of default list-buffers
(global-set-key (kbd "C-x C-b") 'ibuffer)



;; Increase garbage collection threshold during startup for speed
(setq gc-cons-threshold 100000000) ;; 100MB

;; UI clean-up: disable GUI elements early
(set-fringe-mode 0)        ;; no fringes left/right
(menu-bar-mode -1)         ;; no menu bar
(scroll-bar-mode -1)       ;; no scroll bar
(tool-bar-mode -1)         ;; no tool bar
(setq-default mode-line-format nil) ;; hide mode line early
(setq inhibit-startup-screen t) ;; no startup screen

;; Line numbers â€” relative everywhere
(global-display-line-numbers-mode 1)
(setq display-line-numbers-type 'relative)



(use-package modus-themes
  :straight t
  :init
  ;; Light theme: clean paper
  (defvar shapeshifter/modus-operandi-monochrome
    '((bg-main           "#ffffff")
      (fg-main           "#000000")
      (bg-alt            "#e5e5e5")
      (fg-alt            "#1a1a1a")
      (bg-region         "#cccccc")
      (fg-region         "#000000")
      (comment           "#888888")
      (string            "#333333")
      (keyword           "#111111")
      (builtin           "#111111")
      (constant          "#222222")
      (function          "#111111")
      (variable          "#111111")
      ;; Unified org heads (light)
      (fg-heading-1      "#000000")
      (fg-heading-2      "#000000")
      (fg-heading-3      "#000000")
      (fg-heading-4      "#000000")
      (fg-heading-5      "#000000")
      (fg-heading-6      "#000000")))

  ;; Dark theme: grayscale + red comments
  (defvar shapeshifter/modus-vivendi-greyscale-red-comments
    '((bg-main           "#000000")
      (fg-main           "#dddddd")
      (bg-alt            "#111111")
      (fg-alt            "#aaaaaa")
      (bg-region         "#222222")
      (fg-region         "#ffffff")
      (comment           "#ff4444")
      (string            "#bbbbbb")
      (keyword           "#cccccc")
      (builtin           "#cccccc")
      (constant          "#999999")
      (function          "#dddddd")
      (variable          "#bbbbbb")
      (type              "#dddddd")
      ;; Org headings
      (fg-heading-1      "#dddddd")
      (fg-heading-2      "#dddddd")
      (fg-heading-3      "#dddddd")
      (fg-heading-4      "#dddddd")
      (fg-heading-5      "#dddddd")
      (fg-heading-6      "#dddddd")
      ;; UI
      (border            "#222222")
      (fg-line-number    "#555555")
      (bg-line-number    "#111111")
      (cursor            "#ffffff")))

  ;; Tab-bar color mapping per theme
  (defvar shapeshifter/tab-bar-theme-colors
    '((modus-operandi
       :bar-bg "#ffffff" :bar-fg "#000000"
       :tab-bg "#eeeeee" :tab-fg "#000000"
       :inactive-bg "#dddddd" :inactive-fg "#555555")
      (modus-vivendi
       :bar-bg "#000000" :bar-fg "#ffffff"
       :tab-bg "#000000" :tab-fg "#ffffff"
       :inactive-bg "#000000" :inactive-fg "#777777")))

  (defun shapeshifter/apply-tab-bar-theme (theme)
    "Set tab-bar faces based on THEME mapping."
    (let* ((props (alist-get theme shapeshifter/tab-bar-theme-colors))
           (bar-bg (plist-get props :bar-bg))
           (bar-fg (plist-get props :bar-fg))
           (tab-bg (plist-get props :tab-bg))
           (tab-fg (plist-get props :tab-fg))
           (inactive-bg (plist-get props :inactive-bg))
           (inactive-fg (plist-get props :inactive-fg)))
      (custom-set-faces
       `(tab-bar ((t (:background ,bar-bg :foreground ,bar-fg))))
       `(tab-bar-tab ((t (:background ,tab-bg :foreground ,tab-fg :weight bold))))
       `(tab-bar-tab-inactive ((t (:background ,inactive-bg :foreground ,inactive-fg)))))))

  ;; Apply theme + tab-bar style
  (defun shapeshifter/apply-modus-theme (theme)
    (interactive)
    (mapc #'disable-theme custom-enabled-themes)
    (setq modus-themes-common-palette-overrides
          (pcase theme
            ('modus-operandi shapeshifter/modus-operandi-monochrome)
            ('modus-vivendi shapeshifter/modus-vivendi-greyscale-red-comments)
            (_ nil)))
    (load-theme theme :no-confirm)
    (shapeshifter/apply-tab-bar-theme theme))

  ;; Start dark & edgy
  (defvar shapeshifter/current-theme 'modus-vivendi)
  (shapeshifter/apply-modus-theme shapeshifter/current-theme)

  ;; Toggle between themes
  (defun shapeshifter/toggle-modus-theme ()
    (interactive)
    (setq shapeshifter/current-theme
          (if (eq shapeshifter/current-theme 'modus-operandi)
              'modus-vivendi
            'modus-operandi))
    (shapeshifter/apply-modus-theme shapeshifter/current-theme))

  (global-set-key (kbd "<f5>") #'shapeshifter/toggle-modus-theme)) 

